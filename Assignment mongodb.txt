find document query
----------------------------


1)db.movies.find()
2)db.movies.find({writer:"quentin tarantino"})
3)db.movies.find({actors:"brad pitt"})
4)db.movies.find({franchise:"the hobbit"})
5)db.movies.find({year:{$lt:"2000"}})
6)db.movies.find({$or:[{year:{$lte:2000}},{year:{$gte:2010}}]})

Update query
-------------

1)db.movies.update({title: "The Hobbit: An Unexpected Journey"},{synopsis:"A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."})
2)db.movies.update({title: "The Hobbit: The Desolation of Smaug"},{synopsis:"The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."})
3)db.movies.update({title:"Pulp Fiction"},{$push:{actors:"Sameul L.Jalson"}})

Text Search
------------

1)db.movies.createIndex({synopsis:"text"})
db.movies.find({$text:{$search:"Bilbo"}},{_id:0,"synopsis":1})
2)db.movies.find({$text:{$search:"Gandalf"}},{_id:0,"synopsis":1})
3)db.movies.find({$text:{$search:"bilbo -gandalf"}}
4)db.movies.aggregate([{ $match: { $text: { $search: "dwarves hobbit" } } }])
5)db.movies.find({$text:{$search:"gold dragon"}}

delete
-------

1)db.movies.deleteOne({title:"Avatar"})
2)db.movies.deleteOne({title:"Pee Wee Herman's Big Adventur"})

collections
------------

1)db.users.find()
2)db.posts.find()
3)db.posts.aggregate([{"$match":{username:"GoodGuyGreg"}}])
4)db.posts.aggregate([{"$match":{username:"ScumbagSteve"}}])
5)db.comments.find()
6)db.comments.aggregate([{"$match":{username:"GoodGuyGreg"}}])
7)db.comments.aggregate([{"$match":{username:"ScumbagSteve"}}])
8)db.comments.aggregate([{"$match":{post:"Reports a bug in your code"}}])

---------------------------------------------------------------------------------------------------------------------


2ND ASSIGNMENT
---------------
1)db.zipcodes.find({city:"ATLANTA",state:"GA"}
2)db.zipcodes.aggregate([{$match:{$and:[{city:"ATLANTA"},{state:"GA"}]}}])
3)         
4)db.zipcodes.aggregate([{$match:{city:"ATLANTA"}},{$count:"pop"}])

BY STATE
---------
1)db.zipcodes.aggregate([{$match:{state:"GA"}},{$count:"pop"}])
2)db.zipcodes.find().sort({pop:-1})
3)db.zipcodes.aggregate([{$group:{_id:"$state"}},{$sort:{pop:-1}},{$limit:3}])

BY CITY
--------

1)db.zipcodes.aggregate([{$group: {_id: {state: '$state',city: '$city'},pop: {$sum: '$pop'}}}, {$sort: {pop: -1}}])
2)db.zipcodes.find().sort({pop:-1})
3)db.zipcodes.aggregate([{$group:{_id:"$city"}},{$sort:{pop:-1}},{$limit:3}])
4)texas not found

BONUS
-----
1)db.zipcodes.aggregate([{$group: {_id: {state: '$state',city: '$city'},pop: {$sum: '$pop'}}}, {$group: {_id: '$_id.state',avgCityPop: {$avg: '$pop'}}}])
2)db.zipcodes.aggregate([{$group:{_id:"$state"}},{$sort:{pop:1}},{$limit:3}])

--------------------------------------------------------------------------------------------------------------------------------------------------------------
3rd Assignment

1)db.addresses.find()

2)db.addresses.aggregate([{$group:{_id:{restaurant_id:"$restaurant_id",name:"name",borough:"borough",cuisine:"cuisine"}}}])

3)db.addresses.find({},{"restaurant_id":1,"name":1,"borough":1,"zipcode":1,"_id":0})

4)db.addresses.find({},{"restaurant_id":1,"name":1,"borough":1,"cuisine":1,"_id":0})

5)db.addresses.aggregate([{$match:{borough:"Bronx"}},{$limit:5}])

6)db.addresses.aggregate([{$match:{borough:"Bronx"}}])

7)db.addresses.aggregate([{$match:{borough:"Bronx"}},{$skip:5},{$limit:5}])

8)db.addresses.find({grades:{$elemMatch:{"score":{$gt:90}}}})

9)db.addresses.find({grades:{$elemMatch:{"score":{$gt:80,$lt:100}}}})

10)db.addresses.find({"address.coord":{$lt:-95.74168}})

11)db.addresses.find({$and[{"cuisine":{$ne:"American"}},{"grades.score":{$gt:70}},{"address.coord":{$lt:-65.754168}}]})

12)db.addresses.find({"cuisine":{$ne:"American"},"grades.score":{$gt:70},"address.coord":{$lt:-65.754168}]})

13)db.addresses.find({"cuisine":{$ne:"American"},"grades.grade":"A","borough":{$ne:"Brooklyn"}}).sort({"cuisine":1})

14)db.addresses.find({},{name:"Wil","restaurant_id":1,"borough":1,"cuisine":1,_id:0})

15)db.addresses.find({},{name:"ces","restaurant_id":1,"borough":1,"cuisine":1,_id:0})

16)db.addresses.find({name:/.*Reg.*/},{"restaurant_id":1,"borough":1,"cuisine":1})

17)db.addresses.find({"borough":"Bronx",$or:[{cuisine:"American"},{cuisine:"Chinese"}]})

18)db.addresses.find({"borough":{$in:["Staten Island","Queens","Bronx","Brooklyn"]}},{"restaurant_id":1,"borough":1,"cuisine":1,"name":1})

19)db.addresses.find({"borough":{$nin:["Staten Island","Queens","Bronx","Brooklyn"]}},{"restaurant_id":1,"borough":1,"cuisine":1,"name":1})

20)db.addresses.find({"grades.score":{$not:{$gt:10}}},{"restaurant_id":1,"borough":1,"cuisine":1,"name":1})

21)db.addresses.find({$or:[{name:/^Wil/},{"$and":[{"cuisine":{$ne:"American"}},{"cuisine":{$ne:"Chinese"}}]}]},{"restaurant_id":1,"borough":1,"cuisine":1,"name":1})

22)db.addresses.find({"grades.1.date":ISODate("2014-08-11T00:00:00Z"),"grades.1.grade":"A","grades.score":11},{"restaurant_id":1,"name":1,"grades":1})

23)db.addresses.find({"grades.1.date":ISODate("2014-08-11T00:00:00Z"),"grades.1.grade":"A","grades.score":9},{"restaurant_id":1,"name":1,"grades":1})

24)db.addresses.find({"address.coord.1":{$gt:42,$lte:52}},{"restaurant_id":1,"name":1,"address":1,"coord":1})

25)db.addresses.find().sort( { "name": 1 } 

26)db.addresses.find().sort( { "name": -1 }
 
27)db.addresses.find().sort( { "cuisine": -1, "borough": -1 } )

28)db.addresses.find({"address.street":{$exists:true}})

29)db.addresses.find({"address.coord":{$type:1}})

30)db.addresses.find({"grades.score":{$mod:[7,0]}}'{"restaurant_id":1,"name":1,"grades":1})

31)db.addresses.find({name:{$regex:"mon.*",$options:"i"}},{_id:0,"name":1,"borough":1,"cuisine":1,"address.coord":1}

32)db.addresses.find({name:{$regex:"mad.*",$options:"i"}},{_id:0,"name":1,"borough":1,"cuisine":1,"address.coord":1}